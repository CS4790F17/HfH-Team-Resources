@model HabitatForHumanity.ViewModels.ProjectSearchModel
@using PagedList.Mvc;
@using HabitatForHumanity.ViewModels;
@{
    ViewBag.Title = "ManageProjects";
}
@Scripts.Render("~/bundles/jquery")
<h2>Manage Projects</h2>

@ToolKitVM.ModalPreventDefault("createProjectModal", "Create a Project", "createPartialTarget", "createProjectForm")

<!--Filter bar-->
<div class="row">
    <!--Create button-->
    <div class="col-md-4">
        <div id="createProjectButton">
            @ToolKitVM.GenericModalOpenButton("createProjectButton", "createProjectModal", "", "Create a new Project", "glyphicon-plus", false)
        </div>
    </div>

    <!--Search Form-->
    @using (Html.BeginForm("ProjectSearch", "Admin", FormMethod.Post, new { @class = "form-inline", id="searchForm" }))
    {
        <div class="form-group">@Html.HiddenFor(x => x.Page)</div>
        <div class="form-group col-xs-1 col-xs-offset-4" style="margin-right:10px">
            <!--Filter Dropdowns-->
            @Html.DropDownListFor(x => x.statusChoice, Model.statusDropDown, htmlAttributes: new { @class = "form-control", @id = "statusChoiceSelector", @style = "width:auto", onchange = @"form.submit()" })
        </div>
        <!--Search Bar-->
        <div class="form-group col-xs-1">
            <div class="input-group">
                @Html.EditorFor(x => x.queryString, new { htmlAttributes = new { placeholder = "Find Project", @class = "form-control", @style = "width:auto", onchange = @"form.submit()" } })
                <span class="input-group-btn">
                    <button class="btn" type="submit">
                        <span class="glyphicon glyphicon-search"></span>
                    </button>
                </span>
                <!--End of Search Bar-->
            </div>
        </div>
    }
    <!--End of Search Form-->
</div>



<!--Project List-->
<div id="mainPageProjectList">
    @{Html.RenderPartial("ProjectPartialViews/_ProjectList", Model.SearchResults);}
</div>



@Html.PagedListPager(Model.SearchResults, page => Url.Action("ManageProjects", new RouteValueDictionary() { { "queryString", Model.queryString  },{ "statusChoice", Model.statusChoice},  { "Page", page } }), PagedListRenderOptions.PageNumbersOnly)


@ToolKitVM.ButtonScript("createProjectButton", "CreateProject", "Admin", "createPartialTarget")

