@model HabitatForHumanity.Models.WaiverHistory

@{
    ViewBag.Title = "Waiver Details";
}

<h2>Waiver</h2><hr />

<h3>The Volunteer desires to work as a related to being a volunteer. The Volunteer understands volunteer for Habitat and engage in the activities that the activities may include constructing and rehabilitating residential buildings, working in the Habitat offices, and living in housing provided for volunteers of Habitat.</h3>

<h3>The Volunteer does hereby freely, voluntarily, and without duress executes this Release under the following terms:</h3>

<br />
<h5>1. Waiver and Release. Volunteer does hereby release and forever discharge and hold harmless Habitat and its successors and assigns from any and all liability, claims and demands of whatever kind or nature, either in law or in equity, which arise or may hereafter arise from Volunteer's work for Habitat.</h5>

<br />
<h3>Volunteer understands and acknowledges that this Release discharges Habitat from any liability or claim that the Volunteer may have against Habitat with respect to any bodily injury, personal injury, illness, death, or property damage that may result from Volunteer's work for Habitat, whether caused by the negligence of Habitat or its officers, directors, employees, or agents or otherwise. Volunteer also understands that, except as otherwise agreed to by Habitat in writing, Habitat does not assume any responsibility for or obligation to provide financial assistance or other assistance, including but not limited to medical, health, or disability insurance, in the event of injury or illness.</h3><br />

<h5>2. Medical Treatment. Except as otherwise agreed to by Habitat in writing, Volunteer does hereby release and forever discharge Habitat from any claim whatsoever which arises or may hereafter arise on account of any first aid, treatment, or service rendered in connection with the Volunteer's work for Habitat.</h5>
<h5>3. Assumption of the Risk. The Volunteer understands that the work for Habitat may include activities that may be hazardous to the Volunteer, including, but not limited to, construction, loading and unloading, and transportation to and from the work sites. In connection thereto, Volunteer recognizes and understands that activities at Habitat may, in some situations, involve inherently dangerous activities.</h5>

<br />
<h3>Volunteer hereby expressly and specifically assumes the risk of injury or harm in these activities and releases Habitat from all liability for injury, illness, death, or property damage resulting from the activities of the Volunteer's work for Habitat.</h3><br />

<h5>4. Insurance. The Volunteer understands that, except as otherwise agreed to by Habitat in writing, Habitat does not carry or maintain health, medical, or disability insurance coverage for any Volunteer.</h5>

<br />
<h3>Each Volunteer is expected and encouraged to obtain his or her own medical or health insurance coverage.</h3>

<br />
<h5>5. Photographic Release. Volunteer does hereby grant and convey unto Habitat all right, title, and interest in any and all photographic images and video or audio recordings made by Habitat during the Volunteer's work for Habitat, including, but not limited to, any royalties, proceeds, or other benefits derived from such photographs or recordings.</h5>
<h5>6. Other. Volunteer expressly agrees that this Release is intended to be as broad and inclusive as permitted by the laws of the State of Utah, and that this Release shall be governed by and interpreted in accordance with the laws of the State of Utah. Volunteer agrees that in the event that any clause or provision of this Release shall be held to be invalid by any court of competent jurisdiction, the invalidity of such clause or provision shall not otherwise affect the remaining provisions of this Release which shall continue to be enforceable.</h5><br />

@Html.LabelFor(model => model.signatureName, htmlAttributes: new { @class = "col-md-2" })
<div class="col-md-4" style="page-break-after: always; border-bottom: solid 1px black;">
    @Html.DisplayFor(model => model.signatureName)
</div><br/><br/>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>User Details At Sign Date</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.firstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.lastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.homePhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.homePhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.homePhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.workPhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.workPhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.workPhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.streetAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.streetAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.streetAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.city, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.city, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.zip, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.zip, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.zip, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.birthDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.birthDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.birthDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.gender, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.emailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.emailAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.emailAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.emergencyFirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.emergencyFirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.emergencyFirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.emergencyLastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.emergencyLastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.emergencyLastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.relation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.relation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.relation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.emergencyHomePhone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.emergencyHomePhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.emergencyHomePhone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.emergencyWorkPhone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.emergencyWorkPhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.emergencyWorkPhone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.emergencyStreetAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.emergencyStreetAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.emergencyStreetAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.emergencyCity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.emergencyCity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.emergencyCity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.emergencyZip, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.emergencyZip, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.emergencyZip, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
