@model HabitatForHumanity.ViewModels.OrganizationSearchModel
@using PagedList.Mvc;
@using HabitatForHumanity.ViewModels;

@{
    ViewBag.Title = "Manage Organizations";
    var createHtml = "<span class=\"glyphicon glyphicon-plus\" style=\"color:white\" title=\"Activate\"></span>   Add new Organization";
}

@Html.HiddenFor(x => x.Page)
@Html.HiddenFor(x => x.statusChoice)

@*<style>
        .editButton {
            background: none
        }

        .createButton{
            background-color:forestgreen;
            color:white
        }
    </style>*@

<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
<script src="~/Scripts/jquery-3.2.1.js"></script>

<h2 style="margin-bottom:100px">Manage Organizations</h2>



@ToolKitVM.Modal("Create Organization", "createModal", "createPartial")



<div class="container">
    <div class="row">
        <div class="col-xs-7">
            @ToolKitVM.ModalButton("createButton", "createModal", createHtml, "")
            @*  <button class="btn btn-success" id="createOrganization" data-target="#adminModal" data-toggle="modal"><span class="glyphicon glyphicon-plus" style=""></span>   Add new Organization</button>*@
        </div>


        <!--Search filter options-->
        @using (Html.BeginForm())
        {
            <div class="col-xs-5" style="margin-bottom:30px">
                @Html.DropDownListFor(x => x.statusChoice, Model.statusDropDown, htmlAttributes: new { @class = "form-control", @id = "statusChoiceSelector", @style = "width:auto;float:left;margin-right:10px", onchange = @"form.submit()" })

                <div class="input-group" style="width:100px">
                    @Html.EditorFor(model => model.queryString, new { htmlAttributes = new { placeholder = "Find Organization", @class = "form-control", @style = "width:auto", onchange = @"form.submit()" } })
                    <span class="input-group-btn">
                        <button class="btn btn-default">
                            <span class="glyphicon glyphicon-search"></span>
                        </button>
                    </span>
                </div>

            </div>
        <!--End of Search Filter-->
        }
    </div>
</div>

<div id="mainPageOrganizationList">
    @{Html.RenderPartial("OrganizationPartialViews/_OrganizationList", Model.SearchResults); }
</div>

@Html.PagedListPager(Model.SearchResults,
              page => Url.Action("ViewOrganizations", new RouteValueDictionary()
                {
                    { "Page", page },
                  {"queryString",Model.queryString },
                  { "statusChoice", Model.statusChoice }
                })
                //,PagedListRenderOptions.PageNumbersOnly
                )



@* glyphicon glyphicon-ok *@
@* glyphicon glyphicon-ban-circle *@



<script>

    $(".createButton").click(function () {
        $.ajax(
            {
                url: '/Admin/AddOrganization',
                type: 'GET',
                success: function (data) {
                    $("#createPartial").html(data);
                }
            });
    });



    //https://stackoverflow.com/questions/31053460/how-to-make-a-net-mvc-form-inside-a-modal-using-jquery-with-validation
    //prevents the modal from automatically redirecting when the submit button is clicked
    //instead we send our post method our form data to do a validation check server side
    //and return a marked up view to the modal if it's an invalid form
    $("#createModal").on('submit', function (e) {
        e.preventDefault();
        // console.log("prevented from submitting");
        var form = $("#addOrganizationForm");
        $.ajax({
            url: '/Admin/AddOrganization',
            type: 'POST',
            data: form.serialize(),
            success: function (partialResult) {
                //  console.log(partialResult);
                $("#createPartial").html(partialResult);
            }
        })
    });


    function refresh() {
        location.reload();
    }
</script>
