@model List<HabitatForHumanity.ViewModels.EventAddRemoveProjectVM>

<div>Select projects to add to event</div>
   

@using (Html.BeginForm("AddProjectsToEvent", "HfhEvent"))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @for(int i=0;i<Model.Count();i++)
        {
            @Html.HiddenFor(modelItem => Model[i].hfhEventId)
            @Html.HiddenFor(modelItem => Model[i].projectId)
            <div class="form-group">
                @Html.LabelFor(modelItem => Model[i].isSelected, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(modelItem => Model[i].isSelected, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(modelItem => Model[i].isSelected, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(modelItem => Model[i].projectName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(modelItem => Model[i].projectName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(modelItem => Model[i].projectName, "", new { @class = "text-danger" })
                </div>
            </div>
            @*<tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.isSelected)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.projectName)
                    </td>

                </tr>*@
        }

      
         
       

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}



